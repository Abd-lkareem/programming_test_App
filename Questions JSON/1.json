[
    {
        "id":1,
        "qusetion":" ' What will be the output of the following Python code ? x = ['ab', 'cd']  print(len(list(map(list, x)))))) ' ",
        "incorrect_answer":["2","4","none of the mentioned"],
        "correct_answer":"error"
    },

    { "id":2,
        "qusetion":" ' What will be the output of the following Python code?  x = ['ab', 'cd'] print(list(map(list, x))) ' ",
        "incorrect_answer":["[�a�, �b�, �c�, �d�]","[[�ab�], [�cd�]]","none of the mentioned" ],
        "correct_answer":"[[�a�, �b�], [�c�, �d�]"
    },

    { "id":3,
        "qusetion":" ' What will be the output of the following Python code?  x = [12, 34]  print(len(''.join(list(map(int, x))))) ' ", 
        "incorrect_answer":["4","2","none of the mentioned" ],
        "correct_answer":"error" 
    },

    { "id":4,
        "qusetion":" ' What will be the output of the following Python code? x = [12, 34]  print(len(''.join(list(map(str, x))))) ' ", 
        "incorrect_answer":["5","6","error" ],
        "correct_answer":"4" 
    },

    { "id":5,
        "qusetion":" ' What will be the output of the following Python code?   x = [12, 34]  print(len(list(map(len, x)))) ' ", 
        "incorrect_answer":["2","1","none of the mentioned" ],
        "correct_answer":"error" 
    },

    { "id":6,
        "qusetion":" ' What will be the output of the following Python code? x = [12, 34]  print(len(list(map(int, x)))) ' ", 
        "incorrect_answer":["1","error","none of the mentioned" ],
        "correct_answer":"2" 
    },

    { "id":7,
        "qusetion":" ' What will be the output of the following Python code? x = [12.1, 34.0]  print(len(' '.join(list(map(str, x))))) ' ", 
        "incorrect_answer":["6","8", "error" ],
        "correct_answer":"9" 
    },

    { "id":8,
        "qusetion":" ' What will be the output of the following Python code? x = [12.1, 34.0]  print(' '.join(list(map(str, x)))) ' ", 
        "incorrect_answer":["12 1 34 0","12.1 34","121 340" ],
        "correct_answer":"12.1 34.0" 
    },

    { "id":9,
        "qusetion":" ' The output of the following two Python codes are the same. CODE 1 >>> re.split(r'(a)(t)', 'The night sky') - CODE 2  >>> re.split(r'//s+', 'The night sky') ' ", 
        "incorrect_answer":["True"],
        "correct_answer":"False" 
    },

    { "id":10,
        "qusetion":" ' What will be the output of the following Python code?  import re  s = 'abc123 xyz666 lmn-11 def77'   re.sub(r'\b([a-z]+)(\\d+)', r'\\2\\1:', s) ' ", 
        "incorrect_answer":["'�77def: lmn-11: 666xyz: 123abc�","�abc123:�, �xyz666:�, �lmn-11:�, �def77:�","�abc123: xyz666: lmn-11: def77�" ],"correct_answer":"�123abc: 666xyz: lmn-11 77def:�"    },

    { "id":11,
        "qusetion":" ' What will be the output of the following Python code?  re.subn('A', 'X', 'AAAAAA', count=4) ' ", 
        "incorrect_answer":["�XXXXAA, 4�","(�AAAAAA�, 4)","�AAAAAA, 4�" ],
        "correct_answer":"(�XXXXAA�, 4)" 
    },

    { "id":12,
        "qusetion":" ' What will be the output of the following Python code? n = re.sub(r'\\w+', 'Hello', 'Cats and dogs') ' ", 
        "incorrect_answer":["Hello Hello  Hello","[�Hello�, �Hello�, �Hello�]","(�Hello�, �Hello�, �Hello�)" ],
        "correct_answer":"�Hello Hello Hello�" 
    },

    { "id":13,
        "qusetion":" ' What will be the output of the following Python code? re.split(r'\\s+', 'Chrome is better than explorer', maxspilt=3 ' ", 
        "incorrect_answer":["[�Chrome�, �is�, �better�, �than�, �explorer�]","(�Chrome�, �is�, �better�, �than explorer�)","�Chrome is better� �than explorer�" ],
        "correct_answer":"[�Chrome�, �is�, �better�, �than explorer�]" 
    },

    { "id":14,
        "qusetion":" ' The character Dot (that is, �.�) in the default mode, matches any character other than _____________ ' ", 
        "incorrect_answer":["caret","ampersand","percentage symbol" ],
        "correct_answer":"newline" 
    },

    { "id":15,
        "qusetion":" ' ________ matches the start of the string.  ________ matches the end of the string.' ", 
        "incorrect_answer":["�$�, �^�","�$�, �?�","�?�, �^�" ],
        "correct_answer":"�^�, �$�" 
    },

    { "id":16,
        "qusetion":" ' Which of the following will result in an error? ' ", 
        "incorrect_answer":[">>> p = re.compile('d')",">>> p = re.escape(�hello�)",">>> p = re.purge()" ],
        "correct_answer":">>> p = re.subn()" 
    },

    { "id":17,
        "qusetion":" ' What will be the output of the following Python code? re.split('\\W+', 'Hello, hello, hello.') ' ", 
        "incorrect_answer":["[�Hello�, �hello�, �hello.�]","[�Hello, �hello�, �hello�]","[�Hello�, �hello�, �hello�, �.�]" ],
        "correct_answer":"[�Hello�, �hello�, �hello�, �]" 
    },

    { "id":18,
        "qusetion":" ' What will be the output of the following Python function?re.findall('hello world', 'hello', 1) ' ", 
        "incorrect_answer":["[�hello�]","hello","hello world" ],
        "correct_answer":"[ ]" 
    },

    { "id":19,
        "qusetion":" ' Choose the function whose output can be: <_sre.SRE_Match object; span=(4, 8), match=�aaaa�>. ' ", 
        "incorrect_answer":[">>> re.match(�aaaa�, �alohaaaa�, 0)",">>> re.match(�aaa�, �alohaaa�, 0)",">>> re.search(�aaa�, �alohaaa�, 0)" ],
        "correct_answer":">>> re.search(�aaaa�, �alohaaaa�, 0)" 
    },

    { "id":20,
        "qusetion":" ' Which of the following functions clears the regular expression cache? ' ", 
        "incorrect_answer":["re.sub()","re.pos()","re.subn()" ],
        "correct_answer":"re.purge()" 
    },

    { "id":21,
        "qusetion":" ' What will be the output of the following Python code? import re re.ASCII ' ", 
        "incorrect_answer":["8","32","64" ],
        "correct_answer":"256" 
    },

    { "id":22,
        "qusetion":" ' What will be the output of the following Python code? re.split(r'(n\\d)=', 'n1=3.1, n2=5, n3=4.565') ' ", 
        "incorrect_answer":["Error","[�n1�, �3.1, �, �n2�, �5, �, �n3�, �4.565�]","[�3.1, �, �5, �, �4.565�]" ],
        "correct_answer":"[�, �n1�, �3.1, �, �n2�, �5, �, �n3�, �4.565�]" 
    },

    { "id":23,
        "qusetion":" ' The function of re.search is __________ ' ", 
        "incorrect_answer":["Matches a pattern at the start of the string","Matches a pattern at the end of the string","Such a function does not exist" ],
        "correct_answer":"Matches a pattern from any part of a string" 
    },

    { "id":24,
        "qusetion":" ' Which of the following functions creates a Python object? ' ", 
        "incorrect_answer":["re.assemble(str)","re.regex(str)","re.create(str)" ],
        "correct_answer":"re.compile(str)" 
    },

    { "id":25,
        "qusetion":" ' Which of the following pattern matching modiers permits whitespace and comments inside the regular expression? ' ", 
        "incorrect_answer":["re.L","re.S","re.U" ],
        "correct_answer":"re.X" 
    },

    { "id":26,
        "qusetion":" ' What will be the output of the following Python code?  s = 'welcome home'  m = re.match(r'(.*)(.*?)', s)  print(m.group()) ' ", 
        "incorrect_answer":["(�welcome�, �home�)","[�welcome�, �home�]","[�welcome� // �home� ]" ],
        "correct_answer":"welcome home" 
    },

    { "id":27,
        "qusetion":" ' The function of re.match is ____________ ' ", 
        "incorrect_answer":["Error","Matches a pattern anywhere in the string","Matches a pattern at the end of the string" ],
        "correct_answer":"Matches a pattern at the start of the string" 
    },

    { "id":28,
        "qusetion":" '  Which of the following special characters matches a pattern only at the end of the string? ' ",
        "incorrect_answer":["\\B","\\X","\\A" ],
        "correct_answer":"\\Z" 
    },

    { "id":29,
        "qusetion":" ' The output of the following two Python codes are the same. p = re.compile('hello')  r = p.match('hello everyone')  print(r.group(0)) r = re.match('hello', 'hello everyone') print(r.group(0)) ' ",
        "incorrect_answer":["False"],
        "correct_answer":"True" 
    },

    { "id":30,
        "qusetion":" ' Which of the following special characters represents a comment (that is, the contents of the parenthesis are simply ignores)? ' ", 
        "incorrect_answer":["(?:�)","(?=�)","(?!�)" ],
        "correct_answer":"(?#�)" 
    },

    { "id":31,
        "qusetion":" ' Which of the codes shown below results in a match? ' ", 
        "incorrect_answer":["re.match(�George(?=Washington)�, �George Washington�)","re.match(�George(?=Washington)�, �George�","re.match(�George(?=Washington)�, �Georgewashington�)" ],
        "correct_answer":"re.match(�George(?=Washington)�, �GeorgeWashington�)" 
    },

    { "id":32,
        "qusetion":" ' What will be the output of the following Python code?re.compile('hello', re.X) ' ", 
        "incorrect_answer":["[�h�, �e�, �l�, �l�, �o�]","Error","Junk value" ],
        "correct_answer":"re.compile(�hello�, re.VERBOSE)" 
    },

    { "id":33,
        "qusetion":" ' What will be the output of the following Python code? re.split('[a-c]', '0a3B6', re.I) ' ", 
        "incorrect_answer":["Error","[�a�, �B�]","[�a�]" ],
        "correct_answer":"[�0�, �3B6�]" 
    },

    { "id":34,
        "qusetion":" ' What will be the output of the following Python code? re.sub('morning', 'evening', 'good morning') ' ", 
        "incorrect_answer":["�good�","�morning�","�evening�" ],
        "correct_answer":"�good evening�" 
    },

    { "id":35,
        "qusetion":" ' The function re.error raises an exception if a particular string contains no match for the given pattern. ' ", 
        "incorrect_answer":["True"],
        "correct_answer":"False" 
    },

    { "id":36,
        "qusetion":" ' What will be the output of the following Python code? re.escape('new**world') ' ", 
        "incorrect_answer":["�new world�","�**�","�new�, �*�, �*�, �world�" ],
        "correct_answer":"�new\\*\\*world�" 
    },

    { "id":37,
        "qusetion":" ' What will be the output of the following Python code? re.fullmatch('hello', 'hello world') ' ", 
        "incorrect_answer":["[]","<_sre.SRE_Match object; span=(0, 5), match='hello'>","Error" ],
        "correct_answer":"No output" 
    },

    { "id":38,
        "qusetion":" ' The dierence between the functions re.sub and re.subn is that re.sub returns a _______________ whereas re.subn returns a __________________ ' ", 
        "incorrect_answer":["string, list","list, tuple","tuple, list" ],
        "correct_answer":"string, tuple" 
    },

    { "id":39,
        "qusetion":" ' What will be the output of the following Python code? re.split('mum', 'mumbai*', 1) ' ", 
        "incorrect_answer":["Error","[�, �bai�]","[�bai*�]" ],
        "correct_answer":"[�, �bai*�]" 
    },

    { "id":40,
        "qusetion":" ' Which of the following functions returns a dictionary mapping group names to group numbers? ' " ,
        "incorrect_answer":["re.compile.group","re.compile.index","re.compile.indexgroup" ],
        "correct_answer":"re.compile.groupindex"
    },

    { "id":41,
        "qusetion":" ' The following Python code snippet results in an error.  c=re.compile(r'(\\d+)(\\[A-Z]+)([a-z]+)')  c.groupindex ' ", 
        "incorrect_answer":["True"],
        "correct_answer":"False" 
    },

    { "id":42,
        "qusetion":" ' Which of the following functions does not accept any argument? ' ", 
        "incorrect_answer":["re.compile","re.ndall","re.match" ],
        "correct_answer":"re.purge" 
    },

    { "id":43,
        "qusetion":" ' Which of the following lines of code will not show a match? ' ", 
        "incorrect_answer":[">>> re.match(�ab*�, �a�)",">>> re.match(�ab*�, �ab�)",">>> re.match(�ab*�, �abb�)" ],
        "correct_answer":">>> re.match(�ab*�, �ba�)" 
    },

    { "id":44,
        "qusetion":" ' What will be the output of the following Python code? ' ", 
        "incorrect_answer":["{}","�The blue umbrella�","No output" ],
        "correct_answer":"�a�" 
    },

    { "id":45,
        "qusetion":" ' What will be the output of the following Python code?  re.sub('Y', 'X', 'AAAAAA', count=2) ' ", 
        "incorrect_answer":["�YXAAAA�","(�YXAAAA�)","(�AAAAAA�)" ],
        "correct_answer":"�AAAAAA�" 
    },

    { "id":46,
        "qusetion":" ' Which module in Python supports regular expressions? ' ", 
        "incorrect_answer":["regex","pyregex","none of the mentioned" ],
        "correct_answer":"re" 
    },

    { "id":47,
        "qusetion":" ' What does the function re.match do? ' ", 
        "incorrect_answer":["matches a pattern at any position in the string","such a function does not exist","none of the mentioned" ],
        "correct_answer":"matches a pattern at the start of the string" 
    },

    { "id":48,
        "qusetion":" ' What does the function re.search do? ' ", 
        "incorrect_answer":["matches a pattern at the start of the string","such a function does not exist","none of the mentioned" ],
        "correct_answer":"matches a pattern at any position in the string" 
    },

    { "id":49,
        "qusetion":" ' What will be the output of the following Python code? sentence = 'we are humans' matched = re.match(r'(.*) (.*?) (.*)', sentence)                     print(matched.groups()) ' ", 
        "incorrect_answer":["(we, are, humans)","(�we�, �humans�)","�we are humans�"],
        "correct_answer":"(�we�, �are�, �humans�)" 
    },

    { "id":50,
        "qusetion":" ' What will be the output of the following Python code? sentence = 'we are humans'  matched = re.match(r'(.*) (.*?) (.*)', sentence)                      print(matched.group()) ' ", 
        "incorrect_answer":["(�we�, �are�, �humans�)","(we, are, humans)","(�we�, �humans�)" ],
        "correct_answer":"�we are humans�" 
    },

    { "id":51,
        "qusetion":" ' What will be the output of the following Python code? sentence = 'horses are fast'  regex = re.compile('(?P<animal>\\w+) (?P<verb>\\w+) (?P<adjective>\\w+)')    matched = re.search(regex, sentence)   print(matched.groupdict()) ' ", 
        "incorrect_answer":["(�horses�, �are�, �fast�)","�horses are fast�","�are�" ],
        "correct_answer":"{�animal�: �horses�, �verb�: �are�, �adjective�: �fast�}" 
    },

    { "id":52,
        "qusetion":" ' What will be the output of the following Python code? sentence = 'horses are fast' regex = re.compile('(?P<animal>\\w+) (?P<verb>\\w+) (?P<adjective>\\w+)')  matched = re.search(regex, sentence) print(matched.groups() ' ", 
        "incorrect_answer":["{�animal�: �horses�, �verb�: �are�, �adjective�: �fast�}","�horses are fast�","�are�" ],
        "correct_answer":"(�horses�, �are�, �fast�)" 
    },

    { "id":53,
        "qusetion":" ' Which of the following is not a valid mode to open a le? ' ", 
        "incorrect_answer":["ab","r+","w+" ],
        "correct_answer":"rw" 
    },

    { "id":54,
        "qusetion":" ' How do you get the name of a le from a le object (fp)? ' ", 
        "incorrect_answer":["fp.le(name)","self.__name__(fp)","fp.__name__()" ],
        "correct_answer":"fp.name" 
    },

    { "id":55,
        "qusetion":" ' Which of the following is not a valid attribute of a le object (fp)? ' ", 
        "incorrect_answer":["fp.name","fp.closed","fp.mode" ],
        "correct_answer":"fp.size" 
    },

    { "id":56,
        "qusetion":" ' How do you close a le object (fp)? ' ", 
        "incorrect_answer":["close(fp)","fclose(fp)","fp.__close__()" ],
        "correct_answer":"fp.close()" 
    },

    { "id":57,
        "qusetion":" ' How do you get the current position within the le? ' ", 
        "incorrect_answer":["fp.seek()","fp.loc","fp.pos" ],
        "correct_answer":"fp.tell()" 
    },

    { "id":58,
        "qusetion":" ' How do you rename a le? ' ", 
        "incorrect_answer":["fp.name = �new_name.txt�","os.rename(fp, new_name)","os.set_name(existing_name, new_name)" ],
        "correct_answer":"os.rename(existing_name, new_name)" 
    },

    { "id":59,
        "qusetion":" ' How do you delete a le? '  ", 
        "incorrect_answer":["del(fp)","fp.delete()","os.delete(�le�)" ],
        "correct_answer":"os.remove(�le�)" 
    },

    { "id":60,
        "qusetion":" ' How do you change the le position to an oset value from the start? ' ", 
        "incorrect_answer":["fp.seek(oset, 1)","fp.seek(oset, 2)","none of the mentioned" ],
        "correct_answer":"fp.seek(oset, 0)" 
    },
 
    { "id":61,
        "qusetion":" ' What happens if no arguments are passed to the seek function? ' ", 
        "incorrect_answer":["le position is set to the start of le","le position is set to the end of le","le position remains unchanged" ],
        "correct_answer":"error" 
    },

    { "id":62,
        "qusetion":" ' Which is/are the basic I/O connections in le? ' ", 
        "incorrect_answer":["Standard Input","Standard Output","Standard Errors" ],
        "correct_answer":"All of the mentioned" 
    },

    { "id":63,
        "qusetion":" ' What will be the output of the following   1. import sys  2. sys.stdout.write(' Hello\n')  3. sys.stdout.write('Python\n') ' ", 
        "incorrect_answer":["Compilation Error","Runtime Error","Hello Python" ],
        "correct_answer":"Hello Python" 
    },

    { "id":64,
        "qusetion":" ' Which of the following mode will refer to binary data? ' ", 
        "incorrect_answer":["r","w","+" ],
        "correct_answer":"b" 
    },

    { "id":65,
        "qusetion":" ' What is the pickling? ' ", 
        "incorrect_answer":["It is used for object deserialization","None of the mentioned","All of the mentioned" ],
        "correct_answer":"It is used for object serialization" 
    },

    { "id":66,
        "qusetion":" ' What is unpickling? ' ", 
        "incorrect_answer":["It is used for object serialization","None of the mentioned","All of the mentioned" ],
        "correct_answer":"It is used for object deserialization" 
    },

    { "id":67,
        "qusetion":" ' What is the correct syntax of open() function? ' ", 
        "incorrect_answer":["le = open(le_name [, access_mode][, buering])","le object = open(le_name)","none of the mentioned" ],
        "correct_answer":"le object = open(le_name [, access_mode][, buering])" 
    },

    { "id":68,
        "qusetion":" ' Correct syntax of le.writelines() is? ' ", 
        "incorrect_answer":["le.writelines(sequence)","leObject.writelines()","none of the mentioned" ],
        "correct_answer":"leObject.writelines(sequence)" 
    },

    { "id":69,
        "qusetion":" ' In le handling, what does this terms means �r, a�? ' ", 
        "incorrect_answer":["append, read","write, append","none of the mentioned" ],
        "correct_answer":"read, append" 
    },

    { "id":70,
        "qusetion":" ' What is the use of �w� in le handling? ' ", 
        "incorrect_answer":["Read","Append" ],
        "correct_answer":"Write" 
    },

    { "id":71,
        "qusetion":" ' What is the use of �a� in le handling? ' ", 
        "incorrect_answer":["Read","Write","None of the mentioned" ],
        "correct_answer":"Append" 
    },

    { "id":72,
        "qusetion":" ' Which function is used to read all the characters? ' ", 
        "incorrect_answer":["Readcharacters()","Readall()","Readchar()" ],
        "correct_answer":"Read()" 
    },

    { "id":73,
        "qusetion":" ' Which function is used to read single line from le? ' ", 
        "incorrect_answer":["Readline()","Readstatement()","Readfullline()" ],
        "correct_answer":"Readlines()" 
    },

    { "id":74,
        "qusetion":" ' Which function is used to write all the characters? ' ", 
        "incorrect_answer":["writecharacters()","writeall()","writechar()" ],
        "correct_answer":"write()" 
    },

    { "id":75,
        "qusetion":" ' Which function is used to close a le in python? ' ", 
        "incorrect_answer":["Stop()","End()","Closele()" ],
        "correct_answer":"Close()" 
    },

    { "id":76,
        "qusetion":" ' Which of the following are the modes of both writing and reading in binary format in le? ' ", 
        "incorrect_answer":["w","wb","w+" ],
        "correct_answer":"wb+" 
    },

    { "id":77,
        "qusetion":" ' Which of these denitions correctly describes a module? ' ", 
        "incorrect_answer":["Denoted by triple quotes for providing the specication of certain program elements","Denes the specication of how it is to be used","Any program that reuses code" ],
        "correct_answer":"Design and implementation of specic functionality to be incorporated into a program" 
    },

    { "id":78,
        "qusetion":" ' Program code making use of a given module is called a ______ of the module. ' ", 
        "incorrect_answer":["Docstring","Interface","Modularity" ],
        "correct_answer":"Client" 
    },

    { "id":79,
        "qusetion":" ' Which of the following is true about top-down design process? ' ", 
        "incorrect_answer":["The details of a program design are addressed before the overall design","Only the details of the program are addressed","Only the design of the program is addressed" ],
        "correct_answer":"The overall design of the program is addressed before the details" 
    },

    { "id":80,
        "qusetion":" ' In top-down design every module is broken into same number of submodules. ' ", 
        "incorrect_answer":["True"],
        "correct_answer":"False" 
    },

    { "id":81,
        "qusetion":" ' What will be the output of the following Python code ? #mod1  def change(a): b=[x*2 for x in a]  print(b)  #mod2  def change(a):  b=[x*x for x in a] print(b) from mod1 import change  from mod2 import change  #main   s=[1,2,3]  change(s) ' ", 
        "incorrect_answer":["[2,4,6]","[1,4,9]","[2,4,6]  [1,4,9]"],
        "correct_answer":"There is a name clash" 
    },

    { "id":82,
        "qusetion":" ' Which of the following isn�t true about main modules? ' ", 
        "incorrect_answer":["When a python le is directly executed, it is considered main module of a program","Main modules may import any number of modules","Special name given to main modules is: __main__" ],
        "correct_answer":"Other main modules can import main modules" 
    },

    { "id":83,
        "qusetion":" ' Which of the following is not a valid namespace? ' ", 
        "incorrect_answer":["Global namespace","Built-in namespace","Local namespace" ],
        "correct_answer":"Public namespace" 
    },

    { "id":84,
        "qusetion":" ' Which of the following is false about �from-import� form of import? ' ", 
        "incorrect_answer":["The syntax is: from modulename import identier","The namespace of imported module becomes part of importing module","The identiers in module are accessed directly as: identier" ],
        "correct_answer":"This form of import prevents name clash" 
    },

    { "id":85,
        "qusetion":" ' Which of the statements about modules is false? ' ", 
        "incorrect_answer":["In the �from-import� form of import, identiers beginning with two underscores are private and aren�t imported","dir() built-in function monitors the items in the namespace of the main module","When a module is loaded, a compiled version of the module with le extension .pyc is automatically produced" ],
        "correct_answer":"In the �from-import� form of import, all identiers regardless of whether they are private or public are imported" 
    },

    { "id":86,
        "qusetion":" ' What is the order of namespaces in which Python looks for an identier? ' ", 
        "incorrect_answer":["Python rst searches the global namespace, then the local namespace and nally the built-in namespace","Python rst searches the built-in namespace, then the global namespace and nally the local namespace","Python rst searches the built-in namespace, then the local namespace and nally the global namespace" ],
        "correct_answer":"Python rst searches the local namespace, then the global namespace and nally the built-in namespace" 
    },

    { "id":87,
        "qusetion":" ' What will be the output of the following Python code? x = [[0], [1]]  print((' '.join(list(map(str, x))),)) ' ",               
        "incorrect_answer":["(�01�)","[0] [1]","01" ],
        "correct_answer":"(�[0] [1]�,)" 
    },

    { "id":88,
        "qusetion":" ' What will be the output of the following Python code? x = [34, 56] print((''.join(list(map(str, x))),)) ' ", 
        "incorrect_answer":["3456","(3456)","(�3456�)" ],
        "correct_answer":"(�3456�,)" 
    }

    
]
